
@using RepoCat.Portal.Areas.Catalog.Models
@model ProjectInfoViewModel
@if (Model.Autogenerated)
{
    <span class="badge badge-warning" data-toggle="tooltip" title="This project info was generated automatically, without human-created manifest file.">
        <i class="fas fa-exclamation-triangle"></i> Autogenerated
    </span>
}
<div class="project-name">
    <strong>@Model.ProjectName</strong>
</div>
<div style="margin-top: -0.5em"><small>@Model.GetOutputFileName()</small></div>
<div class="mb-1">
    <partial name="_TagsList" model="@(new TagsListViewModel(Model.OrganizationName, Model.RepositoryName, null, Model.Tags, Model.Components.SelectMany(x=>x.Tags)))" />
</div>



@{
    List<ComponentManifestViewModel> componentsWithDocs = Model.Components.Where(x => !string.IsNullOrEmpty(x.DocumentationUri)).ToList();

    if (!string.IsNullOrEmpty(Model.DocumentationUri))
    {
        <dl>
            <dt>Documentation</dt>
            <dd>
                <partial name="_InteractiveStringPartial" model="@(new InteractiveStringModel(Model.Id, null, nameof(Model.DocumentationUri), Model.DocumentationUri, "help-link", "fa fa-external-link-alt"))" />
                @if (componentsWithDocs.Any())
                {
                    <span class="show-more-link expand-table-row">More (@componentsWithDocs.Count())</span>
                }
            </dd>
        </dl>
    }
    else
    {
        if (componentsWithDocs.Any())
        {
            var component = componentsWithDocs.First();
            <dl>
                <dt>Documentation</dt>
                <dd>
                    <partial name="_InteractiveStringPartial" model="@(new InteractiveStringModel(Model.Id, component.Name, nameof(component.DocumentationUri), component.DocumentationUri, "help-link", "fa fa-external-link-alt"))" />
                    @if (componentsWithDocs.Count > 1)
                    {
                        <span class="show-more-link  expand-table-row">More (@(componentsWithDocs.Count - 1))</span>
                    }
                </dd>
            </dl>
        }
    }
    @if (!string.IsNullOrWhiteSpace(Model.DownloadLocation))
    {
        <dt>
            <a class="badge badge-download download-link" href="@Url.Action("Download", "Download", new { id = Model.Id })">Download:</a>
            <span class="download-count" data-toggle="tooltip" title="Number of downloads so far"><i class="fas fa-download"></i>&nbsp;<span>@Model.DownloadsCount</span></span>
        </dt>
        <dd class="project-path download">
            <partial name="_InteractiveStringPartial" model="@(new InteractiveStringModel(Model.Id, null, nameof(Model.DownloadLocation), Model.DownloadLocation, "help-link", "fas fa-download"))" />
        </dd>
    }
}