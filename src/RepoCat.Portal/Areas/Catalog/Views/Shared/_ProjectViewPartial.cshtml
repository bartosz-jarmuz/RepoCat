@using RepoCat.Portal.Areas.Catalog.Models
@using RepoCat.RepositoryManagement.Service;
@model ProjectInfoViewModel

@if (Model.Components.Any())
{
    <partial name="_ProjectWithComponentsViewPartial" model="@Model" />
}
else
{
    <div id="@Model.GetIdentifier()" class="project-card slider">
        <div class="row">
            <div class="col-md-3 project-info">
                <dl>

                    <dt>Project name:</dt>
                    <dd>@Model.ProjectName</dd>

                    <dt>Tags:</dt>
                    <dd>
                        <partial name="_TagsList" model="@(new TagsListViewModel(Model.OrganizationName, Model.RepositoryName, -1, Model.Tags, Model.Components.SelectMany(x => x.Tags)))" />
                    </dd>

                    @{
                        var outputFileName = @Model.GetOutputFileName() ?? "";
                        var outputLabel = "Script file name";
                        if (outputFileName.EndsWith(".dll", StringComparison.OrdinalIgnoreCase) ||
                            outputFileName.EndsWith(".exe", StringComparison.OrdinalIgnoreCase)
                            )
                        {
                            outputLabel = "Assembly file name";
                        }
                    }

                    <dt>@outputLabel:</dt>
                    <dd>@outputFileName</dd>

                    <dt>Owner:</dt>
                    <dd>@Model.Owner</dd>

                    <dt>Documentation:</dt>
                    <dd class="project-path">
                        <partial name="_InteractiveStringPartial" model="@(new InteractiveStringModel(Model.Id, null, nameof(Model.DocumentationUri), Model.DocumentationUri, "help-link", "fa fa-external-link-alt"))" />
                    </dd>

                    <dt>Project path:</dt>
                    <dd class="project-path">
                        <partial name="_InteractiveStringPartial" model="@(new InteractiveStringModel(Model.Id, null, nameof(Model.ProjectUri), Model.ProjectUri, "help-link", "fa fa-external-link-alt"))" />
                    </dd>

                    <dt>Download from:</dt>
                    <dd class="project-path">
                        <partial name="_InteractiveStringPartial" model="@(new InteractiveStringModel(Model.Id, null, nameof(Model.DownloadLocation), Model.DownloadLocation, "help-link", "fa fa-external-link-alt"))" />
                    </dd>

                </dl>

            </div>
            <div class="col-md-9">
                <ul class="compontents-list">
                    @if (!string.IsNullOrEmpty(Model.ProjectDescription))
                    {
                        <dt>Project description:</dt>
                        <dd>@Model.ProjectDescription</dd>
                    }
                </ul>
            </div>
        </div>
    </div>
}