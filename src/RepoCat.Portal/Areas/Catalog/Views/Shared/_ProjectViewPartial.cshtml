@using RepoCat.Portal.Areas.Catalog.Models
@using RepoCat.RepositoryManagement.Service;
@model ProjectInfoViewModel

<div class="col-md-12">
    <div class="card condensed">
        <div class="card-header" style="cursor: pointer;" data-toggle="collapse" data-target="#@Model.GetIdentifier()" aria-expanded="true">
            <strong>@Model.ProjectName</strong> <span class="badge badge-secondary">@Model.OutputType</span>
            <div class="card-header-actions">
                @if (Model.DisplayRepositoryName)
                {
                 <partial name="_SearchedRepositoriesListPartial" model="@new [] { new RepositoryQueryParameter(Model.OrganizationName, Model.RepositoryName)}" />
                }

                <a class="card-header-action btn-minimize" href="#" >
                    <i class="icon-arrow-up toggler-icon"></i>
                </a>
            </div>
        </div>
        <div class="collapse show" id="@Model.GetIdentifier()">

            <div class="card-body project-card">
                <div class="row">
                    <div class="col-md-3 project-info">
                        <dl>
                            <dt>Project name:</dt>
                            <dd>@Model.ProjectName</dd>
                            <dt>Assembly name:</dt>
                            <dd>@Model.GetOutputFileName()</dd>
                            <dt>Project path:</dt>
                            <dd class="project-path">@Model.ProjectUri</dd>
                            @if (!string.IsNullOrEmpty(Model.DownloadLocation))
                            {
                                <dt>Download from:</dt>
                                <dd class="project-path">@Html.ActionLink(Model.DownloadLocation, "Download", "Download", new { id = Model.Id })</dd>
                            }

                        </dl>

                    </div>
                    <div class="col-md-9">
                        <ul class="compontents-list">
                            @foreach (var component in Model.Components)
                            {
                            <li class="component">
                                <div class="row">
                                    <div class="col-md-9 component-main">

                                        <div class="header">
                                            <span class="component-label">Component name:&nbsp;</span>
                                            <span> @component.Name</span>
                                        </div>
                                        <div>
                                            <span class="component-label">Docs link:&nbsp;</span>
                                            @if (!string.IsNullOrEmpty(component.DocumentationUri))
                                            {
                                                <a href="@component.DocumentationUri" target="_blank" class="help-link"> <i class="fa fa-external-link-alt"></i> @component.DocumentationUri</a>
                                            }
                                        </div>
                                        <div>
                                            <span class="component-label description">Description:&nbsp;</span>
                                            <span class="description">
                                                @component.Description
                                            </span>
                                        </div>
                                        <div>
                                            <span class="component-label">Tags:&nbsp;</span>
                                            @foreach (var tag in @component.Tags)
                                            {
                                                <partial name="_TagBadgePartial" model="@(new TagBadgeViewModel(@Model.OrganizationName, @Model.RepositoryName, tag))" />
                                            }
                                        </div>
                                    </div>
                                    <div class="col-md-3">
                                        <div class="">
                                            <div class="component-label">Properties&nbsp;</div>
                                            @foreach (var property in @component.Properties)
                                            {
                                                <span class="component-label description">@property.Key:&nbsp;</span>
                                                <span class="description">
                                                    @property.Value
                                                </span>
                                            }
                                        </div>
                                    </div>
                                </div>
                            </li>
                            }
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>