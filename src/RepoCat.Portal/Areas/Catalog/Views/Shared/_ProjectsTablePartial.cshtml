@using RepoCat.Portal.Areas.Catalog.Models
@using RepoCat.RepositoryManagement.Service

@model ProjectsTableModel
<table id="ResultsTable" class="table table-striped table-bordered wrap  project-card" width="100%">
    <thead>
        <tr>
            <!--Expander button-->
            <th></th>
            <!--Hidden content for expanded row-->
            <th style="display:none;"></th>
            <th class="repository-name" >Repository</th>
            <th>Project Name</th>
            <th>Type</th>
            <th>Description</th>
            <th>Documentation</th>
            <th>Tags</th>
            <th>Properties</th>
        </tr>
    </thead>
    <tbody>
        @foreach (ProjectInfoViewModel project in Model.Projects)
        {
            <tr class="component">
                <!--Expander button-->
                <td></td>
                <!--Hidden content for expanded row-->
                <td><div class="details-view" style="display:none;"><partial name="_ProjectViewPartial" for="@project" /></div></td>
                <td><div class="repository-name" ><partial name="_RepositoryTag" model="@(new RepositoryQueryParameter(project.OrganizationName, project.RepositoryName))" /></div></td>
                <td data-order="@project.ProjectName"><partial name="_ProjectNameCellPartial" for="@project" /></td>
                <td><partial name="_ProjectTypeBadgePartial" for="@project" /></td>
                <td><partial name="_ProjectDescriptionCellPartial" for="@project" /></td>
                <td><partial name="_ProjectDocumentationUriCellPartial" for="@project" /></td>
                <td><partial name="_ProjectTagsCellPartial" for="@project" /></td>
                <td><partial name="_ProjectPropertiesCellPartial" for="@project" /></td>
            </tr>
        }
    </tbody>
</table>
<script type="text/javascript">
    docReady(function () {
        var showRepositoryColumn = false;
        function format(d) {
            var arr = Object.values(d);
            var details = $(arr[0]);
            return details.html();
        }
        if ('@Model.IsMultipleRepositories' === '@true.ToString()') {
            showRepositoryColumn = true;
        }
        

        var table = $('#ResultsTable').DataTable({
            pageLength: 100,
            stateSave: false,
            "autoWidth": true,
            "processing": true,
            "lengthMenu": [[10, 25, 50, 100, -1], [10, 25, 50, 100, "All"]],
            order: [[3, 'asc']],
            searchPanes: {
                layout: "columns-4",
                columns: [3, 4, 7,8],
                cascadePanes: true,
                viewTotal: true,
                dataLength: 30,
                dtOpts: {
                    order: [[1, 'desc']]
                }

            },
            "columnDefs": [
                {
                    "targets": [0],
                    "visible": true,
                    "searchable": false
                },
                {
                    "targets": [1],
                    "visible": false,
                },
                {
                    "targets": [2],
                    "visible": showRepositoryColumn,
                }
            ],

            columns: [
                {
                    "className": 'details-control',
                    "orderable": false,
                    "data": null,
                    "defaultContent": ''
                }, //expnder
                null,//hidden content for expanded row
                null, //repo name
                {
                    searchPanes: {
                        show: true,
                        orthogonal: 'sp'
                    },
                    render: function (data, type, row) {
                        if (type === 'sp') {
                            var tags = [];
                            $(data).closest('.project-name').each(function (index) {
                                var val = $(this).text();
                                val = val.trim();
                                if (val.length > 0) {
                                    tags.push(val);
                                }
                            });
                            return tags;
                        }
                        return data;
                    }
                }, //project name
                {
                    searchPanes: {
                        show: true,
                    },
                },
                null,
                null,
                {
                    searchPanes: {
                        show: true,
                        orthogonal: 'sp'

                    },
                    render: function (data, type, row) {
                        if (type === 'sp') {
                            var tags = [];
                            $($(data), "i").each(function (index) {
                                var val = $(this).text();
                                val = val.trim();
                                if (val.length > 0) {
                                    tags.push(val);
                                }
                            });
                            return tags;
                        }
                        return data;
                    }
                },
                {
                    searchPanes: {
                        show: true,
                        orthogonal: 'sp'

                    },
                    render: function (data, type, row) {
                        if (type === 'sp') {
                            var tags = [];
                            var descriptions = $(data).children().closest('.description');
                            descriptions.each(function (index) {
                                var val = $(this).text();
                                val = val.trim();
                                if (val.length > 0) {
                                    tags.push(val.substring(0, 40));
                                }
                            });
                            return tags;
                        }
                        return data;
                    }
                },
            ],

            dom: '<P><lfrtip>   ',

        });

        $('#ResultsTable tbody').on('click', 'td.details-control', function () {
            var tr = $(this).closest('tr');
            var row = table.row(tr);

            if (row.child.isShown()) {
                // This row is already open - close it
                $('div.slider', row.child()).slideUp(function () {
                    row.child.hide();
                    tr.removeClass('shown');
                });
            }
            else {
                row.child(format(row.data())).show();
                tr.addClass('shown');
                $('div.slider', row.child()).slideDown();
            }
        });

        
    });
</script>
