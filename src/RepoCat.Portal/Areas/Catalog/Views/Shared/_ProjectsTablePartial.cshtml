@using RepoCat.Portal.Areas.Catalog.Models
@using RepoCat.RepositoryManagement.Service

@model ProjectsTableModel

<div class="row">
    <div class="col-md-12">
        <div class="card">
            <partial name="_projects-busy-spinner" />
            <div class="card-body">
                <div class="row">
                    <div class="col-md-12" id="PropertyFilters">
                    </div>
                </div>


                <div id="HiddenPropertyFilters" class="row">
                    <div class="col-md-12">
                        @foreach (var property in Model.Properties)
                        {
                            <span style="display:none;" class="filter-host">
                                <span style="display:inline-block; vertical-align: top;">
                                    <partial name="_BadgeProperty" model="@(new PropertyBadgeViewModel(property, "filter-toggle filter-label", "fas fa-filter"))" />
                                    <select class="form-control select2 select2-inline property-filter" multiple="multiple" data-allow-clear="1" data-toggle="tooltip"
                                            style="width: 20em;" data-property="@property.Key"
                                            title="Filter by @property.Key" placeholder="Click to add a new filter">
                                        @foreach (var value in property.Values)
                                        {
                                            <option value="@value.Value"
                                                    title="Add filter to only show project which have this value for '@property.Key'">
                                                @value.Value (@value.OccurenceCount)
                                            </option>
                                        }
                                        <option value="repoCat_no_property"
                                                title="Add this filter to include projects which do not have this property defined at all">
                                            &lt;No property&gt;
                                        </option>
                                    </select>
                                </span>
                            </span>
                        }
                    </div>
                </div>
                <div class="row">
                    <div class="col-12">
                        <div style="display: inline-block;">
                            <small class="help-block text-secondary" data-toggle="tooltip" title="Projects in repository can contain multiple custom properties, e.g. 'ProjectType'.
It is possible to filter the list of projects by only including projects of certain type.">Filter by properties&nbsp;<i class="far fa-question-circle"></i></small>
                            <div id="PropertyFilterButtons" style="margin-bottom: 0.1em; ">
                                <span>
                                    @foreach (var property in Model.Properties)
                                    {
                                        <partial name="_BadgeProperty" model="@(new PropertyBadgeViewModel(property, "filter-toggle add-filter", "fas fa-filter"))" />
                                    }
                                </span>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-12">
                        <small class="help-block text-secondary" data-toggle="tooltip" title="Projects in repository can contain multiple custom properties, e.g. 'ProjectType'.
You can customize the look of the table by adding or removing columns for these properties which show data imporatant to you.">Add /Remove custom columns&nbsp;<i class="far fa-question-circle"></i></small>
                        <div id="PropertyColumnsButtons" style="margin-bottom: 0.5em;">
                            <span>
                                @foreach (var property in Model.Properties)
                                {
                                    <partial name="_BadgeColumnButton" model="@(new ColumnBadgeViewModel(property.Key, "add-column"))" />
                                }
                            </span>
                        </div>
                    </div>
                </div>

                <span style="display: none;">
                    <partial name="_BadgeColumnButton" model="@(new ColumnBadgeViewModel("", "hide-default-column"))" />
                </span>
                <div class="row mb-3 mt-1" id="TableSearchDiv">
                </div>
                <input type="hidden" id="ResultsTableData" data-showrepositorycolumn="@(Model.IsMultipleRepositories)" data-numberofextracolumns="0" data-repositories="@Model.Repositories" />
                <div class="projects-table-card">

                    <table id="ResultsTable" class="table table-striped table-bordered wrap  project-card" width="100%">
                        <thead>
                            <tr>
                                <!--Expander button-->
                                <th></th>
                                <!--Hidden content for expanded row-->
                                <th style="display:none;"></th>
                                <th data-column-id="rc_Repository" class="repository-name">Repository</th>
                                <th data-column-id="rc_Project Name" style="min-width: 15%;">Project Name</th>
                                <th data-column-id="rc_Type">Type</th>
                                <th data-column-id="rc_Description" style="min-width: 20%;">Description</th>
                                <th data-column-id="rc_Properties">Properties</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (ProjectInfoViewModel project in Model.Projects)
                            {
                                <tr class="component project-row">
                                    <!--Expander button-->
                                    <td data-order="@project.SearchAccuracyScore"></td>
                                    <!--Hidden content for expanded row-->
                                    <td class="break-all"><div class="details-view" style="display:none;"><partial name="_ProjectViewPartial" for="@project" /></div></td>
                                    <td class="break-all"><div class="repository-name"><partial name="_BadgeRepository" model="@(new RepositoryQueryParameter(project.OrganizationName, project.RepositoryName))" /></div></td>
                                    <td class="break-all name-cell" data-order="@project.ProjectName"><partial name="_CellProjectName" for="@project" /></td>
                                    <td class="break-all"><partial name="_BadgeProjectType" for="@project" /></td>
                                    <td class="break-word"><partial name="_CellProjectDescription" for="@project" /></td>
                                    <td class="break-all properties"><partial name="_CellProjectProperties" for="@project" /></td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    docReady(function () {
        if (getCookie('searchPanesOpen') == 'false') {
            $('#SearchPanesCard').removeClass('show');
            setArrowDown($('#SearchPanesCollapser').find('.toggler-icon'));
        }

        showActiveFilters();

        $.fn.dataTable.ext.search.push(
            function (settings, searchData, index, rowData, counter) {
                return propertyFilter(settings, searchData, index, rowData, counter);
            }
        );


        var activeColumnsCookie = getCookie('activeColumns');

        showOverlay();
        setTimeout(function () {
            var table = getProjectsTable(activeColumnsCookie, ('@Model.IsSearchResult' === 'True'));
            setupTableFeatures(table);
            hideOverlay();
            initializeDeferredSelect2();
        }, 10);

    });

</script>
