@model RepoCat.Portal.Areas.Catalog.Models.SearchIndexViewModel

@{
    ViewData["Title"] = "Home Page";
    string initialDisplay = Model?.Result != null ?"" : "display: none;";

}

<partial name="_SearchFormPartial" for="@Model" />

<div id="searchResults" style="@initialDisplay">
@if (Model.Result != null)
{
    await Html.RenderPartialAsync("_SearchResultPartial", Model.Result);
}
</div>


@section scripts {
    <script type="text/javascript">
        $(document).ready(function () {

            if (window.location.href.indexOf('org=') == -1) {
                //Only when showing new page set the repositories to cookie values
                var selectedRepoCookie = getCookie('selectedRepo');
                if (selectedRepoCookie) {
                    var items = selectedRepoCookie.split(',');
                    $('#selectedRepo').val(items);
                    $('#selectedRepo').trigger('change');
                }
            } else {
                //when refreshing a page, set the repositories to what was queried on
                var value = $('#RepositoryQueryParameters').val();
                $('#selectedRepo').val(value.split(','));
                $('#selectedRepo').trigger('change');
            }
            $('#selectedRepo').change(function () {
                 setCookie("selectedRepo", $('#selectedRepo').val());
            })

           

            
            $('#searchQuery').keypress(function (e) {
                var key = e.which;
                if(key === 13)  // the enter key code
                {
                    $('#searchBtn').click();
                    return false;
                }
            });
            //RegexColorizer.addStyleSheet();
            RegexColorizer.colorizeAll();

            $("#searchBtn").click(function () {
                var overlay = $(this).closest('.card').find('.overlay');
                $(overlay).fadeIn();

                var queryString ='&query=' + encodeURIComponent($('#searchQuery').val()) + '&isRegex=' + $('#isRegex').is(':checked');
                var url = '@Url.Action("Search")' 
                var selectedOptions = $('#selectedRepo').val();
                var reposParam= "";
                selectedOptions.forEach(function (item, index) {
                    reposParam = reposParam + '&org=' + getOrganizationFromKey(item) + '&repo=' + getRepositoryFromKey(item);
                });

                var fullQuery = reposParam + queryString;
                fullQuery = '?' + fullQuery.replace(/^&/, '')

                url = url + fullQuery;
                $.get(url,
                    function (data) {
                        $(overlay).fadeOut();
                        $('#searchResults').fadeIn();
                        $("#searchResults").html(data);
                        RegexColorizer.colorizeAll();

                    });
                var historyUrl = '@Url.Action("GetSearchResultPage")';
                historyUrl = historyUrl + fullQuery;
                history.pushState(null, null,historyUrl);
            });
        });
    </script>
}