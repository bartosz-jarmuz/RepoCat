@model RepoCat.Portal.Areas.Catalog.Models.SearchIndexViewModel

@{
    ViewData["Title"] = "Home Page";
    string initialDisplay = Model?.Result != null ?"" : "display: none;";

}

<partial name="_SearchFormPartial" for="@Model" />

<div id="searchResults" style="@initialDisplay">
@if (Model.Result != null)
{
    await Html.RenderPartialAsync("_SearchResultPartial", Model.Result);
}
</div>


@section scripts {
    <script type="text/javascript">
        $(document).ready(function () {

            var selectedRepoCookie = getCookie('selectedRepo');
            if (selectedRepoCookie) {
                $('#selectedRepo option').each(function(){
                    if (this.value == selectedRepoCookie) {
                        $('#selectedRepo').val(selectedRepoCookie);
                        $('#selectedRepo').trigger('change');
                        return false;
                    }
                });
            }

            $('#selectedRepo').change(function () {
                 setCookie("selectedRepo", $('#selectedRepo').val());
            })

            



            $('#searchQuery').keypress(function (e) {
                var key = e.which;
                if(key === 13)  // the enter key code
                {
                    $('#searchBtn').click();
                    return false;
                }
            });
            //RegexColorizer.addStyleSheet();
            RegexColorizer.colorizeAll();

            $("#searchBtn").click(function () {
                var overlay = $(this).closest('.card').find('.overlay');
                $(overlay).fadeIn();

                var queryString ='?query=' + encodeURIComponent($('#searchQuery').val()) + '&isRegex=' + $('#isRegex').is(':checked');
                var url = '@Url.Action("Search", new {organizationName = "___orgName___", repositoryName = "___repoName___"})' + queryString;
                url = url.replace("___repoName___", getRepositoryFromKey($('#selectedRepo').val()));
                url = url.replace("___orgName___", getOrganizationFromKey($('#selectedRepo').val()));
                $.get(url,
                    function (data) {
                        $(overlay).fadeOut();
                        $('#searchResults').fadeIn();
                        $("#searchResults").html(data);
                        RegexColorizer.colorizeAll();

                    });
                var historyUrl = '@Url.Action("GetSearchResultPage",new {organizationName = "___orgName___", repositoryName = "___repoName___"})' + queryString;
                historyUrl = historyUrl.replace("___repoName___", getRepositoryFromKey($('#selectedRepo').val()));
                historyUrl = historyUrl.replace("___orgName___", getOrganizationFromKey($('#selectedRepo').val()));

                history.pushState(null, null,historyUrl);
            });
        });
    </script>
}