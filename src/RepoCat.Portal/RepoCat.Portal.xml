<?xml version="1.0"?>
<doc>
    <assembly>
        <name>RepoCat.Portal</name>
    </assembly>
    <members>
        <member name="T:RepoCat.Portal.Areas.Admin.Controllers.SystemController">
            <summary>
            Class RepositoryController.
            </summary>
            <seealso cref="T:Microsoft.AspNetCore.Mvc.Controller" />
        </member>
        <member name="M:RepoCat.Portal.Areas.Admin.Controllers.SystemController.#ctor(RepoCat.RepositoryManagement.Service.IRepositoryManagementService,AutoMapper.IMapper,Microsoft.ApplicationInsights.TelemetryClient)">
            <summary>
            Initializes a new instance of the <see cref="T:RepoCat.Portal.Areas.Admin.Controllers.SystemController"/> class.
            </summary>
            <param name="service">The repository management service.</param>
            <param name="mapper"></param>
            <param name="telemetryClient"></param>
        </member>
        <member name="M:RepoCat.Portal.Areas.Admin.Controllers.SystemController.Index">
            <summary>
            Default view
            </summary>
            <returns>Task&lt;ViewResult&gt;.</returns>
        </member>
        <member name="T:RepoCat.Portal.Areas.Admin.Models.CollectionSummary">
            <summary>
            Summary info about a collection
            </summary>
        </member>
        <member name="P:RepoCat.Portal.Areas.Admin.Models.CollectionSummary.CollectionNamespace">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:RepoCat.Portal.Areas.Admin.Models.CollectionSummary.SizeInBytes">
            <summary>
            
            </summary>
        </member>
        <member name="M:RepoCat.Portal.Areas.Admin.Models.CollectionSummary.CollectionSize">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:RepoCat.Portal.Areas.Admin.Models.CollectionSummary.AverageObjectSizeInBytes">
            <summary>
            
            </summary>
        </member>
        <member name="M:RepoCat.Portal.Areas.Admin.Models.CollectionSummary.AverageObjectSize">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:RepoCat.Portal.Areas.Admin.Models.CollectionSummary.DocumentCount">
            <summary>
            
            </summary>
        </member>
        <member name="P:RepoCat.Portal.Areas.Admin.Models.CollectionSummary.IndexesCount">
            <summary>
            
            </summary>
        </member>
        <member name="P:RepoCat.Portal.Areas.Admin.Models.CollectionSummary.TotalIndexSizeInBytes">
            <summary>
            
            </summary>
        </member>
        <member name="M:RepoCat.Portal.Areas.Admin.Models.CollectionSummary.TotalIndexSize">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:RepoCat.Portal.Areas.Admin.Models.CollectionSummary.StorageSizeInBytes">
            <summary>
            
            </summary>
        </member>
        <member name="M:RepoCat.Portal.Areas.Admin.Models.CollectionSummary.StorageSize">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:RepoCat.Portal.Areas.Admin.Models.DatabaseOverviewViewModel">
            <summary>
            View model
            </summary>
        </member>
        <member name="P:RepoCat.Portal.Areas.Admin.Models.DatabaseOverviewViewModel.Collections">
            <summary>
            
            </summary>
        </member>
        <member name="T:RepoCat.Portal.Areas.Catalog.Controllers.RepositoryController">
            <summary>
            Class RepositoryController.
            </summary>
            <seealso cref="T:Microsoft.AspNetCore.Mvc.Controller" />
        </member>
        <member name="M:RepoCat.Portal.Areas.Catalog.Controllers.RepositoryController.#ctor(RepoCat.RepositoryManagement.Service.IRepositoryManagementService,AutoMapper.IMapper,Microsoft.ApplicationInsights.TelemetryClient)">
            <summary>
            Initializes a new instance of the <see cref="T:RepoCat.Portal.Areas.Catalog.Controllers.RepositoryController"/> class.
            </summary>
            <param name="service">The repository management service.</param>
            <param name="mapper"></param>
            <param name="telemetryClient"></param>
        </member>
        <member name="M:RepoCat.Portal.Areas.Catalog.Controllers.RepositoryController.GetRepositoryNames">
            <summary>
            Gets the repositories names
            </summary>
            <returns>Task&lt;IEnumerable&lt;System.String&gt;&gt;.</returns>
        </member>
        <member name="M:RepoCat.Portal.Areas.Catalog.Controllers.RepositoryController.Index(System.String,System.String)">
            <summary>
            Indexes the specified repository name.
            </summary>
            <param name="organizationName"></param>
            <param name="repositoryName">Name of the repository.</param>
            <returns>Task&lt;ViewResult&gt;.</returns>
        </member>
        <member name="M:RepoCat.Portal.Areas.Catalog.Controllers.RepositoryController.AddProject">
            <summary>
            Shows the add project view
            </summary>
            <returns>Task&lt;ViewResult&gt;.</returns>
        </member>
        <member name="M:RepoCat.Portal.Areas.Catalog.Controllers.RepositoryController.AddProject(RepoCat.Portal.Areas.Catalog.Models.AddProjectModel)">
            <summary>
            Adds the project.
            </summary>
            <param name="project">The project.</param>
            <returns>Task&lt;IActionResult&gt;.</returns>
        </member>
        <member name="T:RepoCat.Portal.Areas.Catalog.Controllers.SearchController">
            <summary>
            Handles search requests
            </summary>
            <seealso cref="T:Microsoft.AspNetCore.Mvc.Controller" />
        </member>
        <member name="M:RepoCat.Portal.Areas.Catalog.Controllers.SearchController.#ctor(AutoMapper.IMapper,Microsoft.ApplicationInsights.TelemetryClient,RepoCat.RepositoryManagement.Service.IRepositoryManagementService,RepoCat.RepositoryManagement.Service.IStatisticsService)">
            <summary>
            Initializes a new instance of the <see cref="T:RepoCat.Portal.Areas.Catalog.Controllers.SearchController"/> class.
            </summary>
            <param name="mapper">The mapper.</param>
            <param name="telemetryClient"></param>
            <param name="repositoryService"></param>
            <param name="statisticsService"></param>
        </member>
        <member name="M:RepoCat.Portal.Areas.Catalog.Controllers.SearchController.Index">
            <summary>
            Indexes this instance.
            </summary>
            <returns>Task&lt;IActionResult&gt;.</returns>
        </member>
        <member name="M:RepoCat.Portal.Areas.Catalog.Controllers.SearchController.Search(System.String[],System.String[],System.String,System.Boolean)">
            <summary>
            
            </summary>
            <param name="org"></param>
            <param name="repo"></param>
            <param name="query"></param>
            <param name="isRegex"></param>
            <returns></returns>
        </member>
        <member name="M:RepoCat.Portal.Areas.Catalog.Controllers.SearchController.UpdateSearchStatistics(System.Collections.Generic.IReadOnlyCollection{RepoCat.RepositoryManagement.Service.RepositoryQueryParameter},System.String)">
            <summary>
            
            </summary>
            <param name="parameters"></param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:RepoCat.Portal.Areas.Catalog.Controllers.SearchController.GetSearchResultPage(System.String[],System.String[],System.String,System.Boolean)">
            <summary>
            Gets the search result page (for URL sharing).
            </summary>
            <param name="org">Names of the organizations which holds the repository</param>
            <param name="repo">Names of the repositories.</param>
            <param name="query">The query.</param>
            <param name="isRegex">if set to <c>true</c> [is regex].</param>
            <returns>Task&lt;IActionResult&gt;.</returns>
        </member>
        <member name="T:RepoCat.Portal.Areas.Catalog.Models.AddProjectModel">
            <summary>
            Class AddProjectModel.
            </summary>
        </member>
        <member name="P:RepoCat.Portal.Areas.Catalog.Models.AddProjectModel.EmptyManifestXml">
            <summary>
            Gets or sets the manifest XML.
            </summary>
            <value>The manifest XML.</value>
        </member>
        <member name="P:RepoCat.Portal.Areas.Catalog.Models.AddProjectModel.SampleManifestXml">
            <summary>
            Gets or sets the manifest XML.
            </summary>
            <value>The manifest XML.</value>
        </member>
        <member name="T:RepoCat.Portal.Areas.Catalog.Models.BrowseRepositoryViewModel">
            <summary>
            Class BrowseRepositoryViewModel.
            </summary>
        </member>
        <member name="P:RepoCat.Portal.Areas.Catalog.Models.BrowseRepositoryViewModel.RepositoryName">
            <summary>
            Gets or sets the name of the repository.
            </summary>
            <value>The name of the repository.</value>
        </member>
        <member name="P:RepoCat.Portal.Areas.Catalog.Models.BrowseRepositoryViewModel.RepositoryMode">
            <summary>
            
            </summary>
        </member>
        <member name="P:RepoCat.Portal.Areas.Catalog.Models.BrowseRepositoryViewModel.RepositoryStamp">
            <summary>
            Gets or sets the repository stamp.
            </summary>
            <value>The repository stamp.</value>
        </member>
        <member name="P:RepoCat.Portal.Areas.Catalog.Models.BrowseRepositoryViewModel.RepositoryStamps">
            <summary>
            
            </summary>
        </member>
        <member name="P:RepoCat.Portal.Areas.Catalog.Models.BrowseRepositoryViewModel.NumberOfProjects">
            <summary>
            Gets or sets the number of projects.
            </summary>
            <value>The number of projects.</value>
        </member>
        <member name="P:RepoCat.Portal.Areas.Catalog.Models.BrowseRepositoryViewModel.ImportedDate">
            <summary>
            Gets or sets the imported date.
            </summary>
            <value>The imported date.</value>
        </member>
        <member name="P:RepoCat.Portal.Areas.Catalog.Models.BrowseRepositoryViewModel.ImportDuration">
            <summary>
            Gets or sets the duration of the import.
            </summary>
            <value>The duration of the import.</value>
        </member>
        <member name="P:RepoCat.Portal.Areas.Catalog.Models.BrowseRepositoryViewModel.NumberOfComponents">
            <summary>
            Gets or sets the number of components.
            </summary>
            <value>The number of components.</value>
        </member>
        <member name="P:RepoCat.Portal.Areas.Catalog.Models.BrowseRepositoryViewModel.NumberOfTags">
            <summary>
            Gets or sets the number of tags.
            </summary>
            <value>The number of tags.</value>
        </member>
        <member name="P:RepoCat.Portal.Areas.Catalog.Models.BrowseRepositoryViewModel.NumberOfProperties">
            <summary>
            
            </summary>
        </member>
        <member name="P:RepoCat.Portal.Areas.Catalog.Models.BrowseRepositoryViewModel.NumberOfStamps">
            <summary>
            Number of repository stamps in this repo
            </summary>
        </member>
        <member name="P:RepoCat.Portal.Areas.Catalog.Models.BrowseRepositoryViewModel.ProjectsTable">
            <summary>
            Model of the projects table
            </summary>
        </member>
        <member name="T:RepoCat.Portal.Areas.Catalog.Models.ComponentManifestViewModel">
            <summary>
            Class ComponentManifestViewModel.
            </summary>
        </member>
        <member name="P:RepoCat.Portal.Areas.Catalog.Models.ComponentManifestViewModel.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:RepoCat.Portal.Areas.Catalog.Models.ComponentManifestViewModel.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:RepoCat.Portal.Areas.Catalog.Models.ComponentManifestViewModel.DocumentationUri">
            <summary>
            Gets or sets the documentation URI.
            </summary>
            <value>The documentation URI.</value>
        </member>
        <member name="P:RepoCat.Portal.Areas.Catalog.Models.ComponentManifestViewModel.Tags">
            <summary>
            Gets or sets the tags.
            </summary>
            <value>The tags.</value>
        </member>
        <member name="P:RepoCat.Portal.Areas.Catalog.Models.ComponentManifestViewModel.Properties">
            <summary>
            Gets or sets the properties.
            </summary>
            <value>The properties.</value>
        </member>
        <member name="T:RepoCat.Portal.Areas.Catalog.Models.InteractiveStringModel">
            <summary>
            Class TagBadgeViewModel.
            </summary>
        </member>
        <member name="P:RepoCat.Portal.Areas.Catalog.Models.InteractiveStringModel.ImageClassName">
            <summary>
            
            </summary>
        </member>
        <member name="P:RepoCat.Portal.Areas.Catalog.Models.InteractiveStringModel.ProjectId">
            <summary>
            
            </summary>
        </member>
        <member name="P:RepoCat.Portal.Areas.Catalog.Models.InteractiveStringModel.ComponentName">
            <summary>
            
            </summary>
        </member>
        <member name="P:RepoCat.Portal.Areas.Catalog.Models.InteractiveStringModel.PropertyKey">
            <summary>
            
            </summary>
        </member>
        <member name="P:RepoCat.Portal.Areas.Catalog.Models.InteractiveStringModel.Text">
            <summary>
            
            </summary>
        </member>
        <member name="P:RepoCat.Portal.Areas.Catalog.Models.InteractiveStringModel.ClassName">
            <summary>
            
            </summary>
        </member>
        <member name="M:RepoCat.Portal.Areas.Catalog.Models.InteractiveStringModel.#ctor(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="projectId"></param>
            <param name="componentName"></param>
            <param name="propertyKey"></param>
            <param name="text"></param>
            <param name="className"></param>
            <param name="imageClassName"></param>
        </member>
        <member name="M:RepoCat.Portal.Areas.Catalog.Models.InteractiveStringModel.GetDataType">
            <summary>
            Gets the type of data represented by this string
            </summary>
        </member>
        <member name="T:RepoCat.Portal.Areas.Catalog.Models.InteractiveStringModel.DataType">
            <summary>
            Type of string 
            </summary>
        </member>
        <member name="F:RepoCat.Portal.Areas.Catalog.Models.InteractiveStringModel.DataType.Text">
            <summary>
            Default rendering mode
            </summary>
        </member>
        <member name="F:RepoCat.Portal.Areas.Catalog.Models.InteractiveStringModel.DataType.Url">
            <summary>
            Render an anchor tag 
            </summary>
        </member>
        <member name="F:RepoCat.Portal.Areas.Catalog.Models.InteractiveStringModel.DataType.Path">
            <summary>
            Render a download action
            </summary>
        </member>
        <member name="F:RepoCat.Portal.Areas.Catalog.Models.InteractiveStringModel.DataType.Email">
            <summary>
            Render a mailto tag
            </summary>
        </member>
        <member name="T:RepoCat.Portal.Areas.Catalog.Models.ManifestQueryResultViewModel">
            <summary>
            Contains the result of a query
            </summary>
        </member>
        <member name="F:RepoCat.Portal.Areas.Catalog.Models.ManifestQueryResultViewModel.searchTokens">
            <summary>
            The search tokens
            </summary>
        </member>
        <member name="P:RepoCat.Portal.Areas.Catalog.Models.ManifestQueryResultViewModel.IsRegex">
            <summary>
            Gets or sets a value indicating whether this instance is regex.
            </summary>
            <value><c>true</c> if this instance is regex; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:RepoCat.Portal.Areas.Catalog.Models.ManifestQueryResultViewModel.QueryString">
            <summary>
            Gets or sets the query string.
            </summary>
            <value>The query string.</value>
        </member>
        <member name="M:RepoCat.Portal.Areas.Catalog.Models.ManifestQueryResultViewModel.GetSearchTokens">
            <summary>
            Gets the search tokens.
            </summary>
            <returns>List&lt;System.String&gt;.</returns>
        </member>
        <member name="P:RepoCat.Portal.Areas.Catalog.Models.ManifestQueryResultViewModel.SearchTokens">
            <summary>
            Gets or sets the search tokens.
            </summary>
            <value>The search tokens.</value>
        </member>
        <member name="P:RepoCat.Portal.Areas.Catalog.Models.ManifestQueryResultViewModel.ProjectsTable">
            <summary>
            Projects table
            </summary>
        </member>
        <member name="P:RepoCat.Portal.Areas.Catalog.Models.ManifestQueryResultViewModel.Elapsed">
            <summary>
            Gets or sets the elapsed.
            </summary>
            <value>The elapsed.</value>
        </member>
        <member name="P:RepoCat.Portal.Areas.Catalog.Models.ManifestQueryResultViewModel.RepositoryQueryParameters">
            <summary>
            
            </summary>
        </member>
        <member name="T:RepoCat.Portal.Areas.Catalog.Models.ProjectInfoViewModel">
            <summary>
            Class ProjectInfoViewModel.
            </summary>
        </member>
        <member name="P:RepoCat.Portal.Areas.Catalog.Models.ProjectInfoViewModel.Id">
            <summary>
            The Id of the project
            </summary>
        </member>
        <member name="P:RepoCat.Portal.Areas.Catalog.Models.ProjectInfoViewModel.DisplayRepositoryName">
            <summary>
            When queries are run on many repositories, add a repo badge to each project 
            </summary>
        </member>
        <member name="P:RepoCat.Portal.Areas.Catalog.Models.ProjectInfoViewModel.RepositoryName">
            <summary>
            Gets or sets the name of the repository.
            </summary>
            <value>The name of the repository.</value>
        </member>
        <member name="P:RepoCat.Portal.Areas.Catalog.Models.ProjectInfoViewModel.Autogenerated">
            <summary>
            Set to true if the project info was generated automatically, without a human-created manifest file
            </summary>
        </member>
        <member name="P:RepoCat.Portal.Areas.Catalog.Models.ProjectInfoViewModel.OrganizationName">
            <summary>
            Name of the organization in which repo is
            </summary>
        </member>
        <member name="P:RepoCat.Portal.Areas.Catalog.Models.ProjectInfoViewModel.RepositoryStamp">
            <summary>
            Gets or sets the repository stamp.
            </summary>
            <value>The repository stamp.</value>
        </member>
        <member name="P:RepoCat.Portal.Areas.Catalog.Models.ProjectInfoViewModel.AddedDateTime">
            <summary>
            Gets or sets the added date time.
            </summary>
            <value>The added date time.</value>
        </member>
        <member name="P:RepoCat.Portal.Areas.Catalog.Models.ProjectInfoViewModel.AssemblyName">
            <summary>
            Gets or sets the name of the assembly.
            </summary>
            <value>The name of the assembly.</value>
        </member>
        <member name="P:RepoCat.Portal.Areas.Catalog.Models.ProjectInfoViewModel.ProjectUri">
            <summary>
            Gets or sets the project URI.
            </summary>
            <value>The project URI.</value>
        </member>
        <member name="P:RepoCat.Portal.Areas.Catalog.Models.ProjectInfoViewModel.DocumentationUri">
            <summary>
            URI to general project documentation
            </summary>
        </member>
        <member name="P:RepoCat.Portal.Areas.Catalog.Models.ProjectInfoViewModel.ProjectName">
            <summary>
            Gets or sets the name of the project.
            </summary>
            <value>The name of the project.</value>
        </member>
        <member name="P:RepoCat.Portal.Areas.Catalog.Models.ProjectInfoViewModel.Owner">
            <summary>
            Who maintains the project at the moment
            </summary>
        </member>
        <member name="P:RepoCat.Portal.Areas.Catalog.Models.ProjectInfoViewModel.ProjectDescription">
            <summary>
            A description of problem
            </summary>
        </member>
        <member name="P:RepoCat.Portal.Areas.Catalog.Models.ProjectInfoViewModel.TargetExtension">
            <summary>
            Gets or sets the target ext.
            </summary>
            <value>The target ext.</value>
        </member>
        <member name="P:RepoCat.Portal.Areas.Catalog.Models.ProjectInfoViewModel.OutputType">
            <summary>
            Gets or sets the type of the output.
            </summary>
            <value>The type of the output.</value>
        </member>
        <member name="P:RepoCat.Portal.Areas.Catalog.Models.ProjectInfoViewModel.Tags">
            <summary>
            Gets or sets the tags that should allow for a project to be found in a repository catalog.
            These are properties applicable to entire project, not specific components
            </summary>
            <value>The tags.</value>
        </member>
        <member name="P:RepoCat.Portal.Areas.Catalog.Models.ProjectInfoViewModel.Properties">
            <summary>
            Gets or sets the additional key-value properties associated with a project.
            These properties might be enriched by a transmitter plugin automatically
            (e.g. if a transmitter plugin uses reflection to scan through code for some extra info)
            </summary>
            <value>The properties.</value>
        </member>
        <member name="P:RepoCat.Portal.Areas.Catalog.Models.ProjectInfoViewModel.DownloadLocation">
            <summary>
            The download location
            </summary>
        </member>
        <member name="P:RepoCat.Portal.Areas.Catalog.Models.ProjectInfoViewModel.Components">
            <summary>
            Gets or sets the components.
            </summary>
            <value>The components.</value>
        </member>
        <member name="M:RepoCat.Portal.Areas.Catalog.Models.ProjectInfoViewModel.GetOutputFileName">
            <summary>
            Gets the name of the assembly.
            </summary>
            <returns>System.String.</returns>
        </member>
        <member name="M:RepoCat.Portal.Areas.Catalog.Models.ProjectInfoViewModel.GetIdentifier">
            <summary>
            Gets the identifier.
            </summary>
            <returns>System.String.</returns>
        </member>
        <member name="T:RepoCat.Portal.Areas.Catalog.Models.ProjectsTableModel">
            <summary>
            
            </summary>
        </member>
        <member name="M:RepoCat.Portal.Areas.Catalog.Models.ProjectsTableModel.#ctor(System.Collections.Generic.List{RepoCat.Portal.Areas.Catalog.Models.ProjectInfoViewModel},System.Boolean)">
            <summary>
            
            </summary>
            <param name="projects"></param>
            <param name="isMultipleRepositories"></param>
        </member>
        <member name="P:RepoCat.Portal.Areas.Catalog.Models.ProjectsTableModel.Repositories">
            <summary>
            Repos in this table
            </summary>
        </member>
        <member name="P:RepoCat.Portal.Areas.Catalog.Models.ProjectsTableModel.Projects">
            <summary>
            Gets or sets the manifests.
            </summary>
            <value>The manifests.</value>
        </member>
        <member name="P:RepoCat.Portal.Areas.Catalog.Models.ProjectsTableModel.IsMultipleRepositories">
            <summary>
            Specifies whther the table contains projects from multiple repos
            </summary>
        </member>
        <member name="P:RepoCat.Portal.Areas.Catalog.Models.ProjectsTableModel.Properties">
            <summary>
            Collection of all properties and their values to be used in extra filters
            </summary>
        </member>
        <member name="T:RepoCat.Portal.Areas.Catalog.Models.PropertyBadgeViewModel">
            <summary>
            Class TagBadgeViewModel.
            </summary>
        </member>
        <member name="P:RepoCat.Portal.Areas.Catalog.Models.PropertyBadgeViewModel.PropertyFilter">
            <summary>
            The filter
            </summary>
        </member>
        <member name="P:RepoCat.Portal.Areas.Catalog.Models.PropertyBadgeViewModel.AdditionalClass">
            <summary>
            Extra css to add
            </summary>
        </member>
        <member name="P:RepoCat.Portal.Areas.Catalog.Models.PropertyBadgeViewModel.ImageClass">
            <summary>
            
            </summary>
        </member>
        <member name="P:RepoCat.Portal.Areas.Catalog.Models.PropertyBadgeViewModel.InludeAddRemoveIcon">
            <summary>
            
            </summary>
        </member>
        <member name="P:RepoCat.Portal.Areas.Catalog.Models.PropertyBadgeViewModel.ShowCount">
            <summary>
            Show the count of 
            </summary>
        </member>
        <member name="M:RepoCat.Portal.Areas.Catalog.Models.PropertyBadgeViewModel.#ctor(RepoCat.Portal.Areas.Catalog.Models.PropertyFilterModel,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:RepoCat.Portal.Areas.Catalog.Models.PropertyBadgeViewModel"/> class.
            </summary>
        </member>
        <member name="T:RepoCat.Portal.Areas.Catalog.Models.PropertyFilterModel">
            <summary>
            Represents a single project property
            </summary>
        </member>
        <member name="P:RepoCat.Portal.Areas.Catalog.Models.PropertyFilterModel.Key">
            <summary>
            The name of the property
            </summary>
        </member>
        <member name="P:RepoCat.Portal.Areas.Catalog.Models.PropertyFilterModel.Values">
            <summary>
            The collection of values for this property across all projects
            </summary>
        </member>
        <member name="P:RepoCat.Portal.Areas.Catalog.Models.PropertyFilterModel.OccurenceCount">
            <summary>
            How many of the projects have this property defined
            </summary>
        </member>
        <member name="T:RepoCat.Portal.Areas.Catalog.Models.PropertyFilterValue">
            <summary>
            Represents a single property value
            </summary>
        </member>
        <member name="M:RepoCat.Portal.Areas.Catalog.Models.PropertyFilterValue.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="P:RepoCat.Portal.Areas.Catalog.Models.PropertyFilterValue.Value">
            <summary>
            The value
            </summary>
        </member>
        <member name="P:RepoCat.Portal.Areas.Catalog.Models.PropertyFilterValue.OccurenceCount">
            <summary>
            How many of the projects have this property value
            </summary>
        </member>
        <member name="T:RepoCat.Portal.Areas.Catalog.Models.PropertyViewModel">
            <summary>
            
            </summary>
        </member>
        <member name="M:RepoCat.Portal.Areas.Catalog.Models.PropertyViewModel.#ctor(System.String,System.String,System.Collections.Generic.KeyValuePair{System.String,System.String})">
            <summary>
            
            </summary>
            <param name="projectId"></param>
            <param name="componentName"></param>
            <param name="property"></param>
        </member>
        <member name="P:RepoCat.Portal.Areas.Catalog.Models.PropertyViewModel.ProjectId">
            <summary>
            
            </summary>
        </member>
        <member name="P:RepoCat.Portal.Areas.Catalog.Models.PropertyViewModel.ComponentName">
            <summary>
            
            </summary>
        </member>
        <member name="P:RepoCat.Portal.Areas.Catalog.Models.PropertyViewModel.Property">
            <summary>
            
            </summary>
        </member>
        <member name="T:RepoCat.Portal.Areas.Catalog.Models.SearchIndexViewModel">
            <summary>
            Class SearchIndexViewModel.
            </summary>
        </member>
        <member name="P:RepoCat.Portal.Areas.Catalog.Models.SearchIndexViewModel.Repository">
            <summary>
            Gets or sets the repository.
            </summary>
            <value>The repository.</value>
        </member>
        <member name="P:RepoCat.Portal.Areas.Catalog.Models.SearchIndexViewModel.Repositories">
            <summary>
            Gets or sets the repositories.
            </summary>
            <value>The repositories.</value>
        </member>
        <member name="P:RepoCat.Portal.Areas.Catalog.Models.SearchIndexViewModel.Result">
            <summary>
            Gets or sets the result.
            </summary>
            <value>The result.</value>
        </member>
        <member name="P:RepoCat.Portal.Areas.Catalog.Models.SearchIndexViewModel.Query">
            <summary>
            Gets or sets the query.
            </summary>
            <value>The query.</value>
        </member>
        <member name="P:RepoCat.Portal.Areas.Catalog.Models.SearchIndexViewModel.IsRegex">
            <summary>
            Gets or sets a value indicating whether this instance is regex.
            </summary>
            <value><c>true</c> if this instance is regex; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:RepoCat.Portal.Areas.Catalog.Models.SearchIndexViewModel.TopSearchedTags">
            <summary>
            
            </summary>
        </member>
        <member name="T:RepoCat.Portal.Areas.Catalog.Models.TagBadgeViewModel">
            <summary>
            Class TagBadgeViewModel.
            </summary>
        </member>
        <member name="M:RepoCat.Portal.Areas.Catalog.Models.TagBadgeViewModel.#ctor(System.Collections.Generic.IReadOnlyCollection{RepoCat.RepositoryManagement.Service.RepositoryQueryParameter},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:RepoCat.Portal.Areas.Catalog.Models.TagBadgeViewModel"/> class.
            </summary>
            <param name="repositoryQueryParameters"></param>
            <param name="tagText">The tag text.</param>
        </member>
        <member name="M:RepoCat.Portal.Areas.Catalog.Models.TagBadgeViewModel.#ctor(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="organizationName"></param>
            <param name="repositoryName"></param>
            <param name="tagText"></param>
        </member>
        <member name="P:RepoCat.Portal.Areas.Catalog.Models.TagBadgeViewModel.RepositoryQueryParameters">
            <summary>
            
            </summary>
        </member>
        <member name="P:RepoCat.Portal.Areas.Catalog.Models.TagBadgeViewModel.TagText">
            <summary>
            Gets or sets the tag text.
            </summary>
            <value>The tag text.</value>
        </member>
        <member name="T:RepoCat.Portal.Areas.Catalog.Views.Components.NavHeaderStats">
            <summary>
            Class NavHeaderStats.
            </summary>
            <seealso cref="T:Microsoft.AspNetCore.Mvc.ViewComponent" />
        </member>
        <member name="F:RepoCat.Portal.Areas.Catalog.Views.Components.NavHeaderStats.service">
            <summary>
            The service
            </summary>
        </member>
        <member name="M:RepoCat.Portal.Areas.Catalog.Views.Components.NavHeaderStats.#ctor(RepoCat.RepositoryManagement.Service.IRepositoryManagementService)">
            <summary>
            Initializes a new instance of the <see cref="T:RepoCat.Portal.Areas.Catalog.Views.Components.RepositoryList"/> class.
            </summary>
            <param name="repositoryService">The manifests service.</param>
        </member>
        <member name="M:RepoCat.Portal.Areas.Catalog.Views.Components.NavHeaderStats.InvokeAsync">
             <summary>
             invoke as an asynchronous operation.
             </summary>
             <returns>Task&lt;IViewComponentResult&gt;.</returns>
            
        </member>
        <member name="T:RepoCat.Portal.Areas.Catalog.Views.Components.NavHeaderStatsViewModel">
            <summary>
            View model for the stats displayed in top bar
            </summary>
        </member>
        <member name="P:RepoCat.Portal.Areas.Catalog.Views.Components.NavHeaderStatsViewModel.OrganizationsCount">
            <summary>
            
            </summary>
        </member>
        <member name="P:RepoCat.Portal.Areas.Catalog.Views.Components.NavHeaderStatsViewModel.RepositoriesCount">
            <summary>
            
            </summary>
        </member>
        <member name="P:RepoCat.Portal.Areas.Catalog.Views.Components.NavHeaderStatsViewModel.ProjectsCount">
            <summary>
            
            </summary>
        </member>
        <member name="P:RepoCat.Portal.Areas.Catalog.Views.Components.NavHeaderStatsViewModel.ComponentsCount">
            <summary>
            
            </summary>
        </member>
        <member name="P:RepoCat.Portal.Areas.Catalog.Views.Components.NavHeaderStatsViewModel.TagsCount">
            <summary>
            
            </summary>
        </member>
        <member name="P:RepoCat.Portal.Areas.Catalog.Views.Components.NavHeaderStatsViewModel.PropertiesCount">
            <summary>
            
            </summary>
        </member>
        <member name="T:RepoCat.Portal.Areas.Catalog.Views.Components.OrganizationRepositoryGroup">
            <summary>
            List of repositories within a given organization
            </summary>
        </member>
        <member name="P:RepoCat.Portal.Areas.Catalog.Views.Components.OrganizationRepositoryGroup.OrganizationName">
            <summary>
            Name of the organization
            </summary>
        </member>
        <member name="P:RepoCat.Portal.Areas.Catalog.Views.Components.OrganizationRepositoryGroup.Repositories">
            <summary>
            Repositories
            </summary>
        </member>
        <member name="T:RepoCat.Portal.Areas.Catalog.Views.Components.RepositoriesListViewModel">
            <summary>
            Class RepositoriesListViewModel.
            </summary>
        </member>
        <member name="P:RepoCat.Portal.Areas.Catalog.Views.Components.RepositoriesListViewModel.Repositories">
            <summary>
            Gets or sets the repositories.
            </summary>
            <value>The repositories.</value>
        </member>
        <member name="T:RepoCat.Portal.Areas.Catalog.Views.Components.RepositoryList">
            <summary>
            Class RepositoryList.
            </summary>
            <seealso cref="T:Microsoft.AspNetCore.Mvc.ViewComponent" />
        </member>
        <member name="F:RepoCat.Portal.Areas.Catalog.Views.Components.RepositoryList.service">
            <summary>
            The service
            </summary>
        </member>
        <member name="M:RepoCat.Portal.Areas.Catalog.Views.Components.RepositoryList.#ctor(RepoCat.RepositoryManagement.Service.IRepositoryManagementService)">
            <summary>
            Initializes a new instance of the <see cref="T:RepoCat.Portal.Areas.Catalog.Views.Components.RepositoryList"/> class.
            </summary>
            <param name="repositoryDatabase">The manifests service.</param>
        </member>
        <member name="M:RepoCat.Portal.Areas.Catalog.Views.Components.RepositoryList.InvokeAsync">
            <summary>
            invoke as an asynchronous operation.
            </summary>
            <returns>Task&lt;IViewComponentResult&gt;.</returns>
        </member>
        <member name="T:RepoCat.Portal.Controllers.api.DownloadController">
            <summary>
            Handles requests related to project manifests
            </summary>
            <seealso cref="T:Microsoft.AspNetCore.Mvc.Controller" />
        </member>
        <member name="M:RepoCat.Portal.Controllers.api.DownloadController.#ctor(RepoCat.RepositoryManagement.Service.IRepositoryManagementService,Microsoft.ApplicationInsights.TelemetryClient)">
            <summary>
            Initializes a new instance of the <see cref="T:RepoCat.Portal.Controllers.api.ManifestController"/> class.
            </summary>
            <param name="repositoryManagementService"></param>
            <param name="telemetryClient"></param>
        </member>
        <member name="M:RepoCat.Portal.Controllers.api.DownloadController.Download(System.String,System.String,System.String)">
            <summary>
            Gets the project info with specified identifier.
            </summary>
            <param name="id">The identifier.</param>
            <param name="componentName"></param>
            <param name="propertyKey"></param>
            <returns>ProjectInfo.</returns>
        </member>
        <member name="M:RepoCat.Portal.Controllers.api.DownloadController.Download(System.String)">
            <summary>
            Gets the project info with specified identifier.
            </summary>
            <param name="id">The identifier.</param>
            <returns>ProjectInfo.</returns>
        </member>
        <member name="T:RepoCat.Portal.Controllers.api.HealthcheckController">
            <summary>
            Handles healthcheck requests
            </summary>
            <seealso cref="T:Microsoft.AspNetCore.Mvc.Controller" />
        </member>
        <member name="M:RepoCat.Portal.Controllers.api.HealthcheckController.#ctor(Microsoft.ApplicationInsights.TelemetryClient)">
            <summary>
            Handles healthcheck requests
            </summary>
            <param name="telemetryClient"></param>
        </member>
        <member name="M:RepoCat.Portal.Controllers.api.HealthcheckController.Ping">
            <summary>
            Is it alive?
            </summary>
            <returns></returns>
        </member>
        <member name="M:RepoCat.Portal.Controllers.api.HealthcheckController.ErrorNotification(System.Exception)">
            <summary>
            Is it alive?
            </summary>
            <returns></returns>
        </member>
        <member name="T:RepoCat.Portal.Controllers.api.ManifestController">
            <summary>
            Handles requests related to project manifests
            </summary>
            <seealso cref="T:Microsoft.AspNetCore.Mvc.Controller" />
        </member>
        <member name="M:RepoCat.Portal.Controllers.api.ManifestController.#ctor(RepoCat.RepositoryManagement.Service.IRepositoryManagementService,Microsoft.ApplicationInsights.TelemetryClient)">
            <summary>
            Initializes a new instance of the <see cref="T:RepoCat.Portal.Controllers.api.ManifestController"/> class.
            </summary>
            <param name="repositoryManagementService"></param>
            <param name="telemetryClient"></param>
        </member>
        <member name="M:RepoCat.Portal.Controllers.api.ManifestController.Post(RepoCat.Transmission.Models.ProjectInfo)">
            <summary>
            Post the specified ProjectInfo to the database
            </summary>
            <param name="projectInfo">The project information.</param>
            <returns>IActionResult.</returns>
        </member>
        <member name="M:RepoCat.Portal.Controllers.api.ManifestController.Get(System.String)">
            <summary>
            Gets the project info with specified identifier.
            </summary>
            <param name="id">The identifier.</param>
            <returns>ProjectInfo.</returns>
        </member>
        <member name="T:RepoCat.Portal.Controllers.HomeController">
            <summary>
            Class HomeController.
            </summary>
            <seealso cref="T:Microsoft.AspNetCore.Mvc.Controller" />
        </member>
        <member name="M:RepoCat.Portal.Controllers.HomeController.#ctor(Microsoft.Extensions.Caching.Memory.IMemoryCache)">
            <summary>
            Initializes a new instance of the <see cref="T:RepoCat.Portal.Controllers.HomeController"/> class.
            </summary>
        </member>
        <member name="M:RepoCat.Portal.Controllers.HomeController.About">
            <summary>
            Abouts this instance.
            </summary>
            <returns>IActionResult.</returns>
        </member>
        <member name="M:RepoCat.Portal.Controllers.HomeController.NavHeaderStats">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:RepoCat.Portal.Controllers.HomeController.Index">
            <summary>
            Home page (redirects to search page)
            </summary>
            <returns></returns>
        </member>
        <member name="M:RepoCat.Portal.Controllers.HomeController.Error">
            <summary>
            Errors this instance.
            </summary>
            <returns>IActionResult.</returns>
        </member>
        <member name="T:RepoCat.Portal.Mapping.MappingConfigurationFactory">
            <summary>
            Generates the AutoMapper configurations
            </summary>
        </member>
        <member name="M:RepoCat.Portal.Mapping.MappingConfigurationFactory.Create">
            <summary>
            Create all the needed configs
            </summary>
            <returns></returns>
        </member>
        <member name="T:RepoCat.Portal.Mapping.MappingProfile">
            <summary>
                Class MappingProfile.
            </summary>
            <seealso cref="T:AutoMapper.Profile" />
        </member>
        <member name="M:RepoCat.Portal.Mapping.MappingProfile.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:RepoCat.Portal.Mapping.MappingProfile" /> class.
            </summary>
        </member>
        <member name="T:RepoCat.Portal.Models.ErrorViewModel">
            <summary>
            Class ErrorViewModel.
            </summary>
        </member>
        <member name="P:RepoCat.Portal.Models.ErrorViewModel.RequestId">
            <summary>
            Gets or sets the request identifier.
            </summary>
            <value>The request identifier.</value>
        </member>
        <member name="P:RepoCat.Portal.Models.ErrorViewModel.ShowRequestId">
            <summary>
            Gets a value indicating whether [show request identifier].
            </summary>
            <value><c>true</c> if [show request identifier]; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:RepoCat.Portal.RecurringJobs.DirectProjectInfoImporter">
            <summary>
            
            </summary>
        </member>
        <member name="M:RepoCat.Portal.RecurringJobs.DirectProjectInfoImporter.#ctor(RepoCat.RepositoryManagement.Service.IRepositoryManagementService,Microsoft.ApplicationInsights.TelemetryClient)">
            <summary>
            
            </summary>
            <param name="service"></param>
            <param name="telemetryClient"></param>
        </member>
        <member name="P:RepoCat.Portal.RecurringJobs.DirectProjectInfoImporter.ProgressLog">
            <summary>
            Sends messages to telemetry
            </summary>
        </member>
        <member name="M:RepoCat.Portal.RecurringJobs.DirectProjectInfoImporter.Send(RepoCat.Transmission.Models.ProjectInfo)">
            <inheritdoc cref="T:RepoCat.Transmission.Contracts.IProjectInfoSender"/>
        </member>
        <member name="T:RepoCat.Portal.RecurringJobs.IScanRepositoryJob">
            <summary>
            
            </summary>
        </member>
        <member name="M:RepoCat.Portal.RecurringJobs.IScanRepositoryJob.Run(RepoCat.Portal.RecurringJobs.RepositoryToScanSettings)">
            <summary>
            
            </summary>
            <param name="settings"></param>
            <returns></returns>
        </member>
        <member name="T:RepoCat.Portal.RecurringJobs.RepoCatRecurringJobsScheduler">
            <summary>
            
            </summary>
        </member>
        <member name="M:RepoCat.Portal.RecurringJobs.RepoCatRecurringJobsScheduler.ScheduleRecurringJobs(RepoCat.Portal.RecurringJobs.IRepositoryMonitoringSettings,Microsoft.ApplicationInsights.TelemetryClient)">
            <summary>
            
            </summary>
        </member>
        <member name="T:RepoCat.Portal.RecurringJobs.ScanRepositoryJob">
            <summary>
            
            </summary>
        </member>
        <member name="M:RepoCat.Portal.RecurringJobs.ScanRepositoryJob.#ctor(Microsoft.ApplicationInsights.TelemetryClient,AutoMapper.IMapper,RepoCat.Transmission.Contracts.IProjectInfoTransmitter)">
            <summary>
            The job of looking into specified repository for manifests and sending them to RepoCat
            </summary>
            <param name="telemetryClient"></param>
            <param name="mapper"></param>
            <param name="projectInfoTransmitter"></param>
        </member>
        <member name="M:RepoCat.Portal.RecurringJobs.ScanRepositoryJob.Run(RepoCat.Portal.RecurringJobs.RepositoryToScanSettings)">
            <summary>
            Performs the job
            </summary>
            <param name="settings"></param>
        </member>
        <member name="T:RepoCat.Portal.RecurringJobs.IRepositoryMonitoringSettings">
            <summary>
            Collection of settings
            </summary>
        </member>
        <member name="P:RepoCat.Portal.RecurringJobs.IRepositoryMonitoringSettings.RepositorySettings">
            <summary>
            A collection of settings for each monitored repository
            </summary>\
        </member>
        <member name="T:RepoCat.Portal.RecurringJobs.RepositoryMonitoringSettings">
            <inheritdoc cref="T:RepoCat.Portal.RecurringJobs.IRepositoryMonitoringSettings"/>
        </member>
        <member name="P:RepoCat.Portal.RecurringJobs.RepositoryMonitoringSettings.RepositorySettings">
            <inheritdoc cref="T:RepoCat.Portal.RecurringJobs.IRepositoryMonitoringSettings"/>
        </member>
        <member name="T:RepoCat.Portal.RecurringJobs.RepositoryToScanSettings">
            <summary>
            Settings of the repo to scan
            </summary>
        </member>
        <member name="P:RepoCat.Portal.RecurringJobs.RepositoryToScanSettings.JobName">
            <summary>
            If the list of paths is too long (over 32k chars, which is max for cmd line argument) you can save the paths to a file and read from there
            </summary>
        </member>
        <member name="P:RepoCat.Portal.RecurringJobs.RepositoryToScanSettings.ProjectPathsListInputFilePath">
            <summary>
            If the list of paths is too long (over 32k chars, which is max for cmd line argument) you can save the paths to a file and read from there
            </summary>
        </member>
        <member name="P:RepoCat.Portal.RecurringJobs.RepositoryToScanSettings.RepositoryPath">
            <summary>
            Path to repository
            </summary>
        </member>
        <member name="P:RepoCat.Portal.RecurringJobs.RepositoryToScanSettings.RepositoryName">
            <summary>
            Repository name
            </summary>
        </member>
        <member name="P:RepoCat.Portal.RecurringJobs.RepositoryToScanSettings.OrganizationName">
            <summary>
            
            </summary>
        </member>
        <member name="P:RepoCat.Portal.RecurringJobs.RepositoryToScanSettings.RepositoryMode">
            <summary>
            
            </summary>
        </member>
        <member name="P:RepoCat.Portal.RecurringJobs.RepositoryToScanSettings.TransmissionMode">
            <summary>
            Defines what project info builder will be used (e.g. manifest based, .NET project based etc)
            </summary>
        </member>
        <member name="P:RepoCat.Portal.RecurringJobs.RepositoryToScanSettings.JobExecutionCron">
            <summary>
            How often and when should it be executed
            </summary>
        </member>
        <member name="P:RepoCat.Portal.RecurringJobs.RepositoryToScanSettings.IgnoredPathsRegex">
            <summary>
            Optionally, what should be excuded
            </summary>
        </member>
        <member name="P:RepoCat.Portal.RecurringJobs.RepositoryToScanSettings.SkipProjectsWithoutManifest">
            <summary>
            When the project info builder works based on software projects, some basic project info can be extracted from the project file.
            This means repository catalog can be filled in even with projects which don't contain an explicit manifest.
            Set this flag to true if you don't want projects without manifests to be sent to RepoCat
            </summary>
        </member>
        <member name="P:RepoCat.Portal.RecurringJobs.RepositoryToScanSettings.ManifestCanOverrideRepositoryInfo">
            <summary>
            Optional
            </summary>
        </member>
        <member name="P:RepoCat.Portal.RecurringJobs.RepositoryToScanSettings.PropertyMappings">
            <summary>
            A mapping of custom values to a ProjectInfo property name
            </summary>
        </member>
        <member name="T:RepoCat.Portal.TelemetryExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:RepoCat.Portal.TelemetryExtensions.TrackRecurringJobStarted(Microsoft.ApplicationInsights.TelemetryClient,RepoCat.Portal.RecurringJobs.RepositoryToScanSettings)">
            <summary>
            Before execution starts
            </summary>
            <param name="telemetryClient"></param>
            <param name="settings"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:RepoCat.Portal.TelemetryExtensions.TrackRecurringJobFinished(Microsoft.ApplicationInsights.TelemetryClient,RepoCat.Transmission.Contracts.TransmitterArguments,RepoCat.Transmission.Contracts.RepositoryImportResult)">
            <summary>
            Ater execution finished
            </summary>
            <param name="telemetryClient"></param>
            <param name="arguments"></param>
            <param name="result"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:RepoCat.Portal.TelemetryExtensions.TrackRecurringJobScheduled(Microsoft.ApplicationInsights.TelemetryClient,RepoCat.Portal.RecurringJobs.RepositoryToScanSettings)">
            <summary>
            When added to schedule
            </summary>
            <param name="telemetryClient"></param>
            <param name="settings"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="T:RepoCat.Portal.Utilities.SampleManifestXmlProvider">
            <summary>
            Generates a sample XML
            </summary>
        </member>
        <member name="M:RepoCat.Portal.Utilities.SampleManifestXmlProvider.GetSampleProjectInfoSerialized">
            <summary>
             Gets a sample component manifest XML
            </summary>
            <returns>List&lt;System.String&gt;.</returns>
        </member>
        <member name="M:RepoCat.Portal.Utilities.SampleManifestXmlProvider.GetEmptyProjectInfoSerialized">
            <summary>
             Gets an empty component manifest XML
            </summary>
            <returns>List&lt;System.String&gt;.</returns>
        </member>
        <member name="M:RepoCat.Portal.Utilities.SampleManifestXmlProvider.GetEmptyProjectInfo">
            <summary>
            Gets a sample pre-filled project info
            </summary>
            <returns></returns>
        </member>
        <member name="M:RepoCat.Portal.Utilities.SampleManifestXmlProvider.GetSampleProjectInfo">
            <summary>
            Gets a sample pre-filled project info
            </summary>
            <returns></returns>
        </member>
    </members>
</doc>
