using System;
using System.IO;

namespace RepoCat.Models.ProjectInfo
{
    /// <summary>
    /// Project info contains data about a project, understood as a class library or an executable.
    /// <para>Projects can contain zero or more components
    /// They can contain a set of plugins, tool or functionalities,
    /// however they can only be helper assemblies which do not contain any high-level components
    /// (in which case they are not interesting from the point of view of repository catalog).</para>
    /// <para>Project info is also different from a component manifest in that a project properties
    /// can be automatically extracted from the project file (e.g. csproj)</para>
    /// </summary>
    public class ProjectInfo
    {
        /// <summary>
        /// The name of the project (e.g. the name of the csproj file)
        /// </summary>
        public string ProjectName { get; set; }
        /// <summary>
        /// Gets or sets the project URI.
        /// </summary>
        /// <value>The project URI.</value>
        public string ProjectUri { get; set; }
        /// <summary>
        /// Gets or sets the name of the assembly generated by this project
        /// </summary>
        /// <value>The name of the assembly.</value>
        public string AssemblyName { get; set; }
        /// <summary>
        /// Gets or sets the extension of the assembly generated by the project
        /// </summary>
        /// <value>The target ext.</value>
        public string TargetExt { get; set; }
        /// <summary>
        /// Gets or sets the type of the output - class library or executable
        /// </summary>
        /// <value>The type of the output.</value>
        public string OutputType { get; set; }
        /// <summary>
        /// Gets or sets the name of the repository in which the project lives
        /// </summary>
        /// <value>The name of the repository.</value>
        public string RepositoryName { get; set; }
        /// <summary>
        /// A datetime or version stamp of the repository as of when the project info was read and transmitted
        /// </summary>
        public string RepositoryStamp { get; set; }
        /// <summary>
        /// Gets or sets the manifest file path.
        /// </summary>
        /// <value>The manifest path.</value>
        public string ManifestPath { get; set; }
        /// <summary>
        /// Gets or sets the content of the manifest file
        /// </summary>
        /// <value>The content of the manifest.</value>
        public string ManifestContent { get; set; }
    }
}
